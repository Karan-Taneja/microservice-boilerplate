paths:
  /api/user/{id}:
    get:
      summary: Returns the information of a user
      tags:
        - user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the user to get
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/User'
        401:
          description: No credentials provided or invalid
          content:
            application/json:
              schema:
                $ref: '#/components/responses/error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the user
          example: 1
        username:
          type: string
          description: The user name of the user
          example: john.doe
        password:
          type: string
          description: The password of the user
          example: 1234
        name:
          type: string
          description: The name of the user
          example: John Doe
        email:
          type: string
          description: The email of the user
          example: john.doe@fake.com
        creationDate:
          type: date
          description: The date when the user was created
          example: '2020-02-01T03:00:00.000Z'

    error:
      properties:
        code:
          type: integer
          description: The code of the error
          example: 401
        message:
          type: string
          description: The description of the error
          example: Incorrect username or password
